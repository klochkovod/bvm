/// <reference types="node" />
import type { PackageFileInfo } from '@pnpm/cafs-types';
import ssri from 'ssri';
import { checkPkgFilesIntegrity, type PackageFilesIndex } from './checkPkgFilesIntegrity';
import { readManifestFromStore } from './readManifestFromStore';
import { getFilePathInCafs, type FileType, getFilePathByModeInCafs } from './getFilePathInCafs';
export type { IntegrityLike } from 'ssri';
export { checkPkgFilesIntegrity, readManifestFromStore, type FileType, getFilePathByModeInCafs, getFilePathInCafs, type PackageFileInfo, type PackageFilesIndex, };
export declare function createCafs(cafsDir: string, ignore?: ((filename: string) => boolean)): {
    addFilesFromDir: (dirname: string, manifest?: import("@pnpm/cafs-types").DeferredManifestPromise | undefined) => Promise<import("@pnpm/cafs-types").FilesIndex>;
    addFilesFromTarball: (stream: NodeJS.ReadableStream, manifest?: import("@pnpm/cafs-types").DeferredManifestPromise | undefined) => Promise<import("@pnpm/cafs-types").FilesIndex>;
    getFilePathInCafs: (integrity: string | ssri.IntegrityLike, fileType: FileType) => string;
    getFilePathByModeInCafs: (integrity: string | ssri.IntegrityLike, mode: number) => string;
};
